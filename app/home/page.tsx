'use client';

import { useRouter } from 'next/navigation';
import React, { useEffect, useState } from 'react';

// ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á MenuItem interface ‡∏´‡∏≤‡∏Å‡∏°‡∏µ description ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤
interface MenuItem {
  _id: string; // ‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ _id ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö key ‡πÉ‡∏ô React list
  name: string;
  calories: number;
  image: string; // URL ‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏°‡∏ô‡∏π
  reason?: string; // ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ (‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏≠‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï ‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏ö‡πÑ‡∏õ‡πÄ‡∏•‡∏¢)
  description?: string; // ‡πÄ‡∏û‡∏¥‡πà‡∏° field description
}

export default function Home() {
  const router = useRouter();
  const [menus, setMenus] = useState<MenuItem[]>([]);
  // üî¥ ‡∏•‡∏ö state ‡πÅ‡∏•‡∏∞ isLoading ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö highlightedMenu ‡∏≠‡∏≠‡∏Å
  const [isLoadingMenus, setIsLoadingMenus] = useState(true); // ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÅ‡∏Ñ‡πà state ‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å

  // -----------------------------------------------------
  // useEffect ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥)
  // -----------------------------------------------------
  useEffect(() => {
    const fetchMenus = async () => {
      try {
        const res = await fetch('/api/recommend-ai'); // API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
        const text = await res.text();

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö HTTP
        if (!res.ok) {
          console.error(`HTTP error! status: ${res.status}, response: ${text}`);
          throw new Error(text || res.statusText);
        }

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ response ‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤
        if (!text) {
          console.warn('Empty response from /api/recommend-ai');
          setMenus([]); // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô array ‡∏ß‡πà‡∏≤‡∏á
          return;
        }

        const data = JSON.parse(text);

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ menus ‡∏à‡∏≤‡∏Å data ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
        const menuArray = Array.isArray(data.recommendedMenus)
          ? data.recommendedMenus
          : Array.isArray(data)
          ? data
          : [];

        console.log("Fetched Menus Data:", menuArray);
        setMenus(menuArray);
      } catch (error) {
        console.error('Error fetching menus:', error);
        setMenus([]); // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô array ‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏≤‡∏Å‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
      } finally {
        setIsLoadingMenus(false);
      }
    };

    fetchMenus();
  }, []); // [] ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ô‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠ component mount

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡πà‡∏á ID ‡πÄ‡∏°‡∏ô‡∏π
  const goto = (id: string) => {
    if (!id || id === 'undefined') {
      console.warn('Attempted to navigate to menu with invalid ID:', id);
      return; // ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£‡∏´‡∏≤‡∏Å ID ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    }
    router.push(`/menu/${id}`);
  };

  // ‡∏î‡∏∂‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏£‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
  const mainDisplayedMenu = menus.length > 0 ? menus[0] : null;

  // ‡∏ñ‡πâ‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏≠‡∏¢‡∏π‡πà
  if (isLoadingMenus) { // ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÅ‡∏Ñ‡πà isLoadingMenus
    return (
      <div className="flex min-h-screen items-center justify-center bg-gradient-to-br from-orange-300 to-orange-100 text-xl text-gray-700">
        ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...
      </div>
    );
  }

  return (
    <div>
      {/* ----------------------------------------------------- */}
      {/* ‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô (‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏£‡∏Å‡∏à‡∏≤‡∏Å menus array) */}
      {/* ----------------------------------------------------- */}
      <div className="relative flex justify-center font-prompt"> 
        <div className="[background:linear-gradient(0deg,rgba(255,255,255,0.54)_0%,rgba(255,255,255,1)_100%)] w-[181px] pt-[7rem] pb-[5rem] px-[2rem] mr-[11.5rem] rounded-br-3xl">
          <div className="absolute top-[2rem]">
            {/* ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å */}
            <img className="w-[80px] bg-black  h-[80px] rounded-full object-cover"
              src={mainDisplayedMenu?.image || "/default_menu.png"} // ‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ default ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ
              alt={mainDisplayedMenu?.name || "Main Menu"}
            />
          </div>
          {/* ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å */}
          <h1 className="text-[#333333] font-prompt mt-12 text-2xl font-bold font-unbounded">
            {mainDisplayedMenu?.name || '‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏°‡∏ô‡∏π'}
          </h1>
          <div className="py-[1rem] flex flex-col items-baseline">
            {/* ‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å */}
            <h1 className="text-[#333333] font-Unbounded text-5xl font-bold">
              {mainDisplayedMenu?.calories || 0}
            </h1>
            <h1 className="text-[#333333] font-Unbounded text-[0.7rem] ml-[0.2rem]">KCAL</h1>
          </div>
          {/* ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å */}
          <div className="mt-2">
            <p className="text-[#333333] font-prompt text-[0.9rem] leading-tight">
              {mainDisplayedMenu?.description || '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏°‡∏ô‡∏π'}
            </p>
          </div>
        </div>
        {/* ‡∏£‡∏∏‡∏õ‡∏†‡∏≤‡∏û‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ */}
        <img className="absolute z-[-1] object-cover max-w-[365px] [mask-image:linear-gradient(to_bottom,black_60%,transparent)]" src="/image%2048.png" alt="Hero Background" />
      </div>

      <div className="flex flex-col items-center">
        <h1 className="font-[600] mt-[1.5rem] text-[#333333] font-prompt mb-[1rem] mr-[9rem] text-[1.6rem]">‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</h1>
        <div className="flex justify-center gap-3">
          {menus.length === 0 ? (
            <p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</p>
          ) : (
            // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà 1 (index 1) ‡∏ñ‡∏∂‡∏á 2 (index 2)
            menus.slice(1, 3).map((item) => { // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô slice(1, 3) ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß
              if (!item._id) return null;
              return (
                <div
                  key={item._id}
                  onClick={() => goto(item._id)}
                  className="bg-white inline-block w-[155px] py-[1rem] rounded-2xl transform transition duration-300 hover:scale-103 cursor-pointer"
                >
                  <div className="flex flex-col items-center">
                    <img className="h-[8rem] w-[8rem]" src={item.image || "/default.png"} alt={item.name || "‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£"} />
                    <div className="flex items-center">
                      <div className="w-[0.1rem] h-[2rem] mt-[0.8rem] mr-[0.4rem] ml-[0.5rem] bg-[#333333]"></div>
                      <div>
                        <h1 className="text-[0.9rem] w-[123px] font-bold mt-2.5 mb-1 font-prompt">{item.name?.toUpperCase() || "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏ô‡∏π"}</h1>
                        <div className="flex items-baseline mt-[-0.3rem]">
                          <h1 className="text-[0.8rem] font-Unbounded">{item.calories}</h1>
                          <h1 className="text-[0.5rem] ml-[0.3rem] font-Unbounded">KCAL</h1>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              );
            })
          )}
        </div>

        <div className="relative">
          <h1 className="font-[600] my-[1.5rem] text-center mb-[2rem] text-[1.6rem] font-Pro text-[#333333] font-prompt">‡πÄ‡∏°‡∏ô‡∏π‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏∏‡∏ì</h1>
          {/* ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏á‡∏ó‡∏µ‡πà (Stir Cauliflower) - ‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏°‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ Hardcode */}
          <div className="flex items-center gap-4 bg-white pl-[0.5rem] rounded-br-2xl rounded-tl-2xl rounded-bl-[45px] rounded-tr-[45px] h-[150px] w-[330px]">
            <img className="h-[140px] transform transition duration-500 hover:scale-110" src="/image%2055.png" alt="Stir Cauliflower" />
            <div className="relative top-[-2.3rem] left-[-0.5rem]">
              <h1 className="text-[1rem] leading-6 font-Unbounded font-bold text-[#333333]">STIR CAULIFLOWER</h1>
              <h1 className="text-[0.5rem] font-Unbounded absolute top-[0.45rem] left-[3.2rem]">150 KCAL</h1>
            </div>
            <div className="absolute left-[10rem] mt-[3rem]">
              <div className="grid grid-cols-2">
                <div className="flex gap-1.5 mt-[0.5rem] items-center">
                  <div className="w-[0.5rem] h-[0.5rem] border-none rounded-[100%] bg-[#00EA3E]"></div>
                  <h1 className="text-[0.5rem] text-[#333333] font-prompt">‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡∏ï‡πà‡∏≥</h1>
                </div>
                <div className="flex gap-1.5 mt-[0.5rem] items-center">
                  <div className="w-[0.5rem] h-[0.5rem] border-none rounded-[100%] bg-[#00EA3E]"></div>
                  <h1 className="text-[0.5rem] text-[#333333] font-prompt">‡∏ú‡∏±‡∏î‡πÅ‡∏ö‡∏ö‡πÉ‡∏ä‡πâ‡∏ô‡πâ‡∏≥‡∏°‡∏±‡∏ô‡∏ô‡πâ‡∏≠‡∏¢</h1>
                </div>
                <div className="flex gap-1.5 mt-[0.5rem] items-center">
                  <div className="w-[0.5rem] h-[0.5rem] border-none rounded-[100%] bg-[#00EA3E]"></div>
                  <h1 className="text-[0.5rem] text-[#333333] font-prompt">‡πÑ‡∏ü‡πÄ‡∏ö‡∏≠‡∏£‡πå‡∏™‡∏π‡∏á</h1>
                </div>
                <div className="flex gap-1.5 mt-[0.5rem] items-center">
                  <div className="w-[0.5rem] h-[0.5rem] border-none rounded-[100%] bg-[#00EA3E]"></div>
                  <h1 className="text-[0.5rem] text-[#333333] font-prompt">‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏•‡πÉ‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏î</h1>
                </div>
              </div>
              <div className="flex gap-1.5 mt-[0.5rem] items-center">
                <div className="w-[0.5rem] h-[0.5rem] border-none rounded-[100%] bg-[#00EA3E]"></div>
                <h1 className="text-[0.5rem] text-[#333333] font-prompt">‡∏≠‡∏£‡πà‡∏≠‡∏¢‡πÅ‡∏•‡∏∞‡∏î‡∏µ‡∏ï‡πà‡∏≠‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢ ‡πÜ</h1>
              </div>
            </div>
          </div>

          {/* ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏û‡∏¥‡πÄ‡∏®‡∏©/‡∏™‡∏∏‡πà‡∏°‡∏ó‡∏µ‡πà‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å API (‡∏ñ‡∏±‡∏î‡∏à‡∏≤‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥ 2 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£) */}
          <div className="flex justify-center gap-3 my-5">
            {menus.length < 3 ? ( // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÄ‡∏°‡∏ô‡∏π‡πÑ‡∏°‡πà‡∏ñ‡∏∂‡∏á 3 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏°‡∏ô‡∏π‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á
              <p>‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</p>
            ) : (
              menus
                .slice(3, 5) // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏µ‡πà 4 ‡πÅ‡∏•‡∏∞ 5 (index 3, 4)
                .map((item) => {
                  if (!item._id) return null;
                  return (
                    <div
                      key={item._id}
                      onClick={() => goto(item._id)}
                      className="bg-white inline-block w-[155px] py-[1rem] rounded-2xl transform transition duration-300 hover:scale-103 cursor-pointer"
                    >
                      <div className="flex flex-col items-center">
                        <img className="h-[8rem] w-[8rem]" src={item.image || "/default.png"} alt={item.name || "‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏≤‡∏´‡∏≤‡∏£"} />
                        <div className="flex items-center">
                          <div className="w-[0.1rem] h-[2rem] mt-[0.8rem] mr-[0.4rem] ml-[0.5rem] bg-[#333333]"></div>
                          <div>
                            <h1 className="text-[0.9rem] w-[123px] font-bold mt-2.5 mb-1 font-prompt">
                              {item.name?.toUpperCase() || "‡πÑ‡∏°‡πà‡∏ó‡∏£‡∏≤‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏ô‡∏π"}
                            </h1>
                            <div className="flex items-baseline mt-[-0.3rem]">
                              <h1 className="text-[0.8rem] font-Unbounded">{item.calories}</h1>
                              <h1 className="text-[0.5rem] ml-[0.3rem] font-Unbounded">KCAL</h1>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  );
                })
            )}
          </div>
        </div>
      </div>
    </div>
  );
}