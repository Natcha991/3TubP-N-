// app/api/login/route.ts

import { connectToDatabase } from '@/lib/mongodb';
import User from '@/models/User';
import { NextResponse } from 'next/server';

export async function POST(req: Request) {
  await connectToDatabase();

  const { username } = await req.json(); // Frontend ‡∏¢‡∏±‡∏á‡∏™‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô 'username' ‡∏°‡∏≤

  if (!username || typeof username !== 'string' || username.trim() === '') {
    return NextResponse.json({ message: '‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏' }, { status: 400 });
  }

  try {
    // üî¥ ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ: ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏î‡πâ‡∏ß‡∏¢ field 'name' ‡πÅ‡∏ó‡∏ô 'username'
    const user = await User.findOne({ name: username.trim() }); // <<< ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ï‡∏£‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô `name`

    if (!user) {
      console.log(`Login attempt failed: User '${username}' not found.`);
      return NextResponse.json({ message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ô‡∏µ‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á' }, { status: 404 });
    }

    console.log(`User '${username}' logged in successfully with ID: ${user._id}`);
    return NextResponse.json({ userId: user._id.toString() }, { status: 200 });
  } catch (error: unknown) { // ‡πÉ‡∏ä‡πâ unknown ‡πÅ‡∏•‡∏∞ type guard
    console.error('POST /api/login error:', error);

    let errorMessage = 'Unknown server error';
    if (error instanceof Error) {
      errorMessage = error.message;
    } else if (typeof error === 'object' && error !== null && 'message' in error && typeof (error as any).message === 'string') {
      errorMessage = (error as any).message;
    }

    return NextResponse.json({ message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå', error: errorMessage }, { status: 500 });
  }
}