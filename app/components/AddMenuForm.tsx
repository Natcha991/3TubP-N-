'use client';
import { useState } from 'react';
import { useRouter } from 'next/navigation';

export default function AddMenuForm() {
  const router = useRouter();
  const [formData, setFormData] = useState({
    name: '',
    calories: '',
    riceType: '',
    description: '',
    healthNote: '',
    tags: '',
    ingredients: '',
    instructions: '',
    image: '',
  });

  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    const body = {
      ...formData,
      calories: Number(formData.calories) || 0,
      tags: formData.tags.split(',').map(t => t.trim()),
      ingredients: formData.ingredients.split(',').map(i => i.trim()),
      image: formData.image.trim() || 'default.png',
    };

    const res = await fetch('/api/menu', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(body),
    });

    if (res.ok) {
      alert('‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
      router.push('/menu');
    } else {
      alert('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î');
    }
  };

  const handleJsonUpload = async (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0];
    if (!file) return;

    try {
      const text = await file.text();
      const menus = JSON.parse(text);

      if (!Array.isArray(menus)) {
        alert('‚ùå ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô array ‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏ô‡∏π');
        return;
      }

      const res = await fetch('/api/menu/bulk', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(menus),
      });

      if (!res.ok) throw new Error('Upload failed');
      alert('‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß');
      router.push('/menu');
    } catch (err) {
      console.error('‚ùå Upload Error:', err);
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î');
    }
  };

  return (
    <div className="space-y-4">
      <form onSubmit={handleSubmit} className="space-y-2">
        <input name="name" placeholder="‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏°‡∏ô‡∏π" value={formData.name} onChange={handleChange} />
        <input name="calories" placeholder="‡πÅ‡∏Ñ‡∏•‡∏≠‡∏£‡∏µ‡πà" value={formData.calories} onChange={handleChange} />
        <input name="riceType" placeholder="‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡πâ‡∏≤‡∏ß" value={formData.riceType} onChange={handleChange} />
        <input name="description" placeholder="‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÄ‡∏°‡∏ô‡∏π" value={formData.description} onChange={handleChange} />
        <input name="healthNote" placeholder="‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÄ‡∏ä‡∏¥‡∏á‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û" value={formData.healthNote} onChange={handleChange} />
        <input name="tags" placeholder="‡πÅ‡∏ó‡πá‡∏Å ‡πÄ‡∏ä‡πà‡∏ô ‡∏°‡∏∑‡πâ‡∏≠‡πÄ‡∏ä‡πâ‡∏≤,‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡πÄ‡∏ö‡∏≤‡∏´‡∏ß‡∏≤‡∏ô" value={formData.tags} onChange={handleChange} />
        <textarea name="ingredients" placeholder="‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏î‡∏¥‡∏ö ‡πÄ‡∏ä‡πà‡∏ô ‡πÑ‡∏Å‡πà,‡∏Ç‡πâ‡∏≤‡∏ß‡∏Å‡∏•‡πâ‡∏≠‡∏á,‡∏Å‡∏£‡∏∞‡πÄ‡∏ó‡∏µ‡∏¢‡∏°" value={formData.ingredients} onChange={handleChange} />
        <textarea name="instructions" placeholder="‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥" value={formData.instructions} onChange={handleChange} />
        <input name="image" placeholder="‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û ‡πÄ‡∏ä‡πà‡∏ô friedrice.png" value={formData.image} onChange={handleChange} />
        <button type="submit">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏°‡∏ô‡∏π</button>
      </form>

      <hr className="my-4" />

      <div>
        <label className="font-semibold block mb-1">üìÇ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏°‡∏ô‡∏π‡∏à‡∏≤‡∏Å‡πÑ‡∏ü‡∏•‡πå JSON:</label>
        <input type="file" accept=".json" onChange={handleJsonUpload} />
        <p className="text-sm text-gray-500">* ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô array ‡∏Ç‡∏≠‡∏á object ‡πÄ‡∏°‡∏ô‡∏π ‡πÄ‡∏ä‡πà‡∏ô [&#123;"name": "...", "calories": 123&#125;]</p>
      </div>
    </div>
  );
}